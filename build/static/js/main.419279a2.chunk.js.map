{"version":3,"sources":["components/contacts/Contact.js","actions/contactActions.js","actions/types.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["Contact","state","showContactInfo","onDeleteClick","id","_this","props","deleteContact","_this2","this","_this$props$contact","contact","name","email","phone","react_default","a","createElement","className","onClick","setState","style","cursor","float","color","bind","Link","to","concat","marginRight","Component","connect","_ref3","Object","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","wrap","_context3","prev","next","axios","delete","type","payload","t0","stop","_x3","apply","arguments","Contacts","getContacts","contacts","Fragment","map","contacts_Contact","key","_ref","_callee","res","_context","get","sent","data","_x","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","preventDefault","_this$state","newContact","addContact","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","_ref4","_callee4","_context4","post","_x4","EditContact","updContact","match","params","updateContact","nextProps","nextState","_nextProps$contact","getContact","_ref2","_callee2","_context2","_x2","_ref5","_callee5","_context5","put","_x5","Header","branding","href","About","NotFound","initialState","combineReducers","length","undefined","action","objectSpread","filter","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","layout_Header","Switch","Route","exact","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.419279a2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../actions/contactActions\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = id => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{\" \"}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: \"pointer\" }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: \"pointer\",\n                float: \"right\",\n                color: \"black\",\n                marginRight: \"1rem\"\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteContact }\n)(Contact);\n","import {\n  GET_CONTACTS,\n  DELETE_CONTACT,\n  ADD_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT\n} from \"./types\";\nimport axios from \"axios\";\n\nexport const getContacts = () => async dispatch => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n  dispatch({\n    type: GET_CONTACTS,\n    payload: res.data\n  });\n};\n\nexport const getContact = id => async dispatch => {\n  const res = await axios.get(\n    `https://jsonplaceholder.typicode.com/users/${id}`\n  );\n  dispatch({\n    type: GET_CONTACT,\n    payload: res.data\n  });\n};\n\nexport const deleteContact = id => async dispatch => {\n  try {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  } catch (e) {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }\n};\n\nexport const addContact = contact => async dispatch => {\n  const res = await axios.post(\n    \"https://jsonplaceholder.typicode.com/users\",\n    contact\n  );\n  dispatch({\n    type: ADD_CONTACT,\n    payload: res.data\n  });\n};\n\nexport const updateContact = contact => async dispatch => {\n  const res = await axios.put(\n    `https://jsonplaceholder.typicode.com/users/${contact.id}`,\n    contact\n  );\n  dispatch({\n    type: UPDATE_CONTACT,\n    payload: res.data\n  });\n};\n","export const GET_CONTACTS = \"GET_CONTACTS\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const GET_CONTACT = \"GET_CONTACT\";\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getContacts } from \"../../actions/contactActions\";\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired\n};\n\n// Get contacts in the state\n// can access with this.props.contacts\n// maps the state from redux to a local component property\nconst mapStateToProps = state => ({\n  contacts: state.contact.contacts\n});\n// fire off an ACTION i.e., get_contacts by creating a variable that takes in dispatch =>\n// const mapDispatchToProps = dispatch => ({\n//   getContacts: () => dispatch({ type: GET_CONTACTS })\n// });\n\n// second param is obj with function getContacts\nexport default connect(\n  mapStateToProps,\n  { getContacts }\n)(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../actions/contactActions\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    //// SUBMIT CONTACT ////\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  addContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addContact }\n)(AddContact);\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getContact, updateContact } from \"../../actions/contactActions\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  // fills contact info fields when edit contact is selected\n  UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n    const { name, email, phone } = nextProps.contact;\n    this.setState({\n      name,\n      email,\n      phone\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getContact(id);\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n\n    const updContact = {\n      id,\n      name,\n      email,\n      phone\n    };\n\n    //// UPDATE CONTACT ////\n    this.props.updateContact(updContact);\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  getContact: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  contact: state.contact.contact\n});\n\nexport default connect(\n  mapStateToProps,\n  { getContact, updateContact }\n)(EditContact);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import {\n  GET_CONTACTS,\n  DELETE_CONTACT,\n  ADD_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT\n} from \"../actions/types\";\n\nconst initialState = {\n  contacts: [],\n  contact: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload\n      };\n    case GET_CONTACT:\n      return {\n        ...state,\n        contact: action.payload\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n}\n","// meeting place for all reducers\nimport { combineReducers } from \"redux\";\nimport contactReducer from \"./contactReducer\";\n\nexport default combineReducers({\n  contact: contactReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n// initial state set to an empty object\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\n// provides entire application with the state or store\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      // wrap everything within the Provider (pass in store)\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}